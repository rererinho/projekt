import string

from sqlmodel import Field, SQLModel, create_engine
from datetime import datetime


class Squad(SQLModel, table=True):
    id: int = Field(primary_key=True, description="Player ID")
    name: str = Field(description="Player Name")
    number: int = Field(default=None, description="Player Shirt Number")
    age: int = Field(default=None, description="Player Age")
    position: str = Field(default=None, max_length=1, description="Player Position (G, D, M, A)")
    injured: bool = Field(default=False, description="Player Injury Status")
    minutes: int = Field(default=0, description="Minutes Played in the Season")
    appearances: int = Field(default=0, description="Total Appearances in the Season (Lineup/Substitution)")
    lineups: int = Field(default=0, description="Number of Games Started in Lineups")
    substitute_in: int = Field(default=0, description="Number of Games Started on Bench But Entered in Game with Substitution")
    substitute_out: int = Field(default=0, description="Number of Games Where Player Was Substituted Out")
    substitutes_on_bench: int = Field(default=0, description="Number of Games on the Bench Without Substitution (Not Played)")
    goals: int = Field(default=0, description="Number of Goals Scored in the Season")
    assists: int = Field(default=0, description="Number of Assists")
    yellowCards: int = Field(default=0, description="Yellow Cards Received in the Season")
    yellowRed: int = Field(default=0, description="Number of Games Where Player Was Sent Off After 2nd Yellow Card")
    redCards: int = Field(default=0, description="Direct Red Cards in the Season")
    isCaptain: int = Field(default=0, description="Number of Games Player Played as a Team Captain")
    shotsTotal: int = Field(default=0, description="Total Shots in All Matches of the Season")
    shotsOn: int = Field(default=0, description="Total Shots ON in All Games of the Season")
    goalsConceded: int = Field(default=0, description="Goals Conceded for GK")
    foulsDrawn: int = Field(default=0, description="Total Fouls Drawn in All Games")
    foulsCommitted: int = Field(default=0, description="Total Fouls Committed in All Games")
    tackles: int = Field(default=0, description="Total Tackles in All Games")
    blocks: int = Field(default=0, description="Total Blocked Shots in All Games")
    crossesTotal: int = Field(default=0, description="Total Crosses in All Games")
    crossesAccurate: int = Field(default=0, description="Total Accurate Crosses in All Games")
    interceptions: int = Field(default=0, description="Total Interceptions in All Games")
    clearances: int = Field(default=0, description="Total Clearances in All Games")
    disposessed: int = Field(default=0, description="Total Dispossessions in All Games")
    saves: int = Field(default=0, description="Total GK Saves in All Games")
    insideBoxSaves: int = Field(default=0, description="Number of GK Saves After Shots Inside the Box")
    duelsTotal: int = Field(default=0, description="Total Duels in All Games")
    duelsWon: int = Field(default=0, description="Total Duels Won in All Games")
    dribbleAttempts: int = Field(default=0, description="Total Dribble Attempts in All Games")
    dribbleSucc: int = Field(default=0, description="Total Successful Dribbles in All Games")
    penComm: int = Field(default=0, description="Total Committed Penalties in All Games")
    penWon: int = Field(default=0, description="Total Penalties Won in All Games")
    penScored: int = Field(default=0, description="Total Goals Scored After Penalties in Regular Time")
    penMissed: int = Field(default=0, description="Total Missed Penalty Shots During the Game in Regular Time")
    penSaved: int = Field(default=0, description="Total Saved Penalties (GK) During Regular Time")
    passes: int = Field(default=0, description="Total Passes in All Games")
    pAccuracy: int = Field(default=0, description="Average Passing Accuracy Percentage")
    keyPasses: int = Field(default=0, description="Number of Key Passes")
    woodWorks: int = Field(default=0, description="Number of Shots When Ball Hit Woodwork")
    rating: int = Field(default=0, description="Average Player Rating in All Games (Internal Formula)")